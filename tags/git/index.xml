<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Jiby&#39;s toolbox</title>
    <link>https://jiby.tech/tags/git/</link>
    <description>Recent content in git on Jiby&#39;s toolbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2019 00:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://jiby.tech/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git diff from empty commit</title>
      <link>https://jiby.tech/post/git-diff-empty-repo/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jiby.tech/post/git-diff-empty-repo/</guid>
      <description>In order to troubleshoot a bug in the very early history of a project using git, I needed a way to show the git diff from &amp;ldquo;nothing&amp;rdquo; to the first commit. Since git keeps a linked graph of commits, what I wanted was a diff from the commit before the first one. Searching the onlines dug up this answer on StackOverflow, showing that there&amp;rsquo;s a specific commit hash we can use to diff from &amp;ldquo;nothing&amp;rdquo; to the first commit:</description>
    </item>
    
    <item>
      <title>Git diff for prose</title>
      <link>https://jiby.tech/post/git-diff-lines-prose/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jiby.tech/post/git-diff-lines-prose/</guid>
      <description>When writing long sentences in documentation repositories, git tends to show really unhelpful diffs. They are unreadable because long lines aren&amp;rsquo;t broken, which hides edits happening towards end of line. A colleague of mine asked me if git couldn&amp;rsquo;t be configured to make this sort of thing more obvious. Challenge accepted!
  Figure 1: Can you spot the edit made in a long line of text?
  Kaushal Modi&amp;rsquo;s blog post on git diff for minified JS and CSS inspired this idea for all you prose lovers.</description>
    </item>
    
    <item>
      <title>Git pretty graph</title>
      <link>https://jiby.tech/post/git-graph/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0100</pubDate>
      
      <guid>https://jiby.tech/post/git-graph/</guid>
      <description>Get a cool graph of commits from the command line! For newbies and experts alike, git is a bit hard to visualize. Here&amp;rsquo;s a handy git command to make understanding git easier.
git log --decorate --oneline --graph   Figure 1: Git graph of this repository
  This can be made into a git command via an entry your ~/.gitconfig:
[alias] graph = log --decorate --oneline --graph Code Snippet 1: Alias &#34;</description>
    </item>
    
  </channel>
</rss>